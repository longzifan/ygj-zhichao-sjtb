vertx.worker.pool.size=60
vertx.springWorker.instances=30

server.port=8090

#webApi扫描包路径
web-api-packages= com.tb.service.sjtb.handler,\
  com.tb.service.handler
#异步服务扫描包路径
async-service-impl-packages= com.tb.service.sjtb.service.impl,\
  com.tb.service.service.impl
#Http服务器端口号
http-server-port= 8084
#工作线程池大小
worker-pool-size= 40
#异步服务实例数，建议与CPU核数相同
async-service-instances= 2

#Activiti配置
#spring.activiti.check-process-definitions=false
#spring.activiti.database-schema-update=false
#spring.activiti.db-identity-used=true
#spring.activiti.history-level=full
#
#appId = wxf9b981f1b9cfc408
#appSecret = f933bc7c1b07e908b2c37e6b8394bc7d
#
#api-key = URQAFuLWYdZt4kKMR3dZlzqL
#secret-key = 6wrapRyVvEOympee8zCkDIzLR7MG4qKr
#
upload.server.type = hdfs

#文件存储服务配置
#filesize-max=5242880
#storage-folder=app_data
#
#files.docservice.viewed-docs=.pdf|.djvu|.xps
#files.docservice.edited-docs=.docx|.xlsx|.csv|.pptx|.txt
#files.docservice.convert-docs=.docm|.dotx|.dotm|.dot|.doc|.odt|.fodt|.ott|.xlsm|.xltx|.xltm|.xlt|.xls|.ods|.fods|.ots|.pptm|.ppt|.ppsx|.ppsm|.pps|.potx|.potm|.pot|.odp|.fodp|.otp|.rtf|.mht|.html|.htm|.epub
#files.docservice.timeout=120000

##Onlyoffice
#files.docservice.url.converter=http://192.168.0.4:8026/ConvertService.ashx
#files.docservice.url.tempstorage=http://192.168.0.4:8026/ResourceService.ashx
#files.docservice.url.api=http://192.168.0.4:8026/web-apps/apps/api/documents/api.js
#files.docservice.url.preloader=http://192.168.0.4:8026/web-apps/apps/api/documents/cache-scripts.html
#files.docservice.secret=

#文件存储服务配置
#ossstore_path = /cache/
#oss_fileServerHost=121.36.87.178
#oss_read_ip=121.36.87.178
#oss_fileServerPort=8022
#oss_masterHost=121.36.87.178
#oss_masterPort=8023

#阿里云OSS文件存储配置
#访问域名
#aliyun_oss_endpoint=oss-hemai.oss-cn-beijing.aliyuncs.com
#访问ID
#aliyun_oss_accessKeyId=LTAI4FcpNJhER4PPY5x9X92a
#访问密钥
#aliyun_oss_accessKeySecret=
#存储空间名/称
#aliyun_oss_bucketName=oss-hemai
#上传目录
#aliyun_oss_path=/web

#HDFS配置
#hdfs_path=hdfs://namenode:8020
#hdfs_username=root

##  Hikari 连接池配置 ------ 详细配置请访问：https://github.com/brettwooldridge/HikariCP
## 最小空闲连接数量
spring.datasource.hikari.minimum-idle=5
## 空闲连接存活最大时间，默认600000（10分钟）
spring.datasource.hikari.idle-timeout=600000
## 连接池最大连接数，默认是10
spring.datasource.hikari.maximum-pool-size=10
## 此属性控制从池返回的连接的默认自动提交行为,默认值：true
spring.datasource.hikari.auto-commit=true
## 连接池母子
spring.datasource.hikari.pool-name=MyHikariCP
## 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
spring.datasource.hikari.max-lifetime=6000000
## 数据库连接超时时间,默认30秒，即30000
spring.datasource.hikari.connection-timeout=3000000
spring.datasource.hikari.connection-test-query=SELECT 1


#########################################################################本地配置#########################################################################
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://10.228.30.230:5432/sxyg?useUnicode=true&characterEncoding=utf-8&useSSL=false&nullCatalogMeansCurrent=true
spring.datasource.username = postgres
spring.datasource.password = postgres
default-datasource = sxyg
#sxyg

#swagger-base-url = 192.168.0.50:8084
#swagger-base-url = 192.168.0.4:8033

#swagger.scan.package = com.tb.service

verification-url = http://192.168.0.45:8086/stickeronline/sso/verifyToken
#verification-url = http://192.168.0.4:8032/stickeronline/sso/verifyToken

#    Redis配置
#spring.redis.database= 0
#spring.redis.host= 192.168.0.4
#spring.redis.lettuce.pool.max-active= 8
#spring.redis.lettuce.pool.max-idle= 8
#spring.redis.lettuce.pool.max-wait= -1ms
#spring.redis.lettuce.pool.min-idle= 0
#spring.redis.lettuce.shutdown-timeout= 100ms
#spring.redis.password= 123456
#spring.redis.port= 6379

#图片访问地址
#img.url = http://192.168.0.4:8032/pdf/img/
#img.url = http://192.168.0.50:8084/pdf/img/

#########################################################################服务器配置#########################################################################
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.datasource.url = jdbc:mysql://192.168.0.162:3306/tb_ksgjpt?useUnicode=true&characterEncoding=utf-8&useSSL=false&nullCatalogMeansCurrent=true
##spring.datasource.url = jdbc:mysql://121.36.87.178:3306/tb_ksgjpt?useUnicode=true&characterEncoding=utf-8&useSSL=false&nullCatalogMeansCurrent=true
#spring.datasource.username = root
#spring.datasource.password = tb-mysql123456
#default-datasource = tb_ksgjpt
#
swagger-base-url = 121.36.73.167:8021
#
swagger.scan.package = com.tb.service
#
#verification-url = http://121.36.73.167:8020/stickeronline/sso/verifyToken
##verification-url = http://192.168.0.162:8020/stickeronline/sso/verifyToken
#
##    Redis配置
#spring.redis.database= 0
#spring.redis.host= 121.36.87.178
#spring.redis.lettuce.pool.max-active= 8
#spring.redis.lettuce.pool.max-idle= 8
#spring.redis.lettuce.pool.max-wait= -1ms
#spring.redis.lettuce.pool.min-idle= 0
#spring.redis.lettuce.shutdown-timeout= 100ms
#spring.redis.password= tb-redis123456
#spring.redis.port= 6379
#
##图片访问地址
#img.url = http://121.36.73.167:8021/pdf/img/
###JPA###
#数据库语言
spring.jpa.database=postgresql

hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#使用spring-boot-starter-data-jpa 配置使运行时输出SQL语句
spring.jpa.show-sql=true
#解决Spring Boot集成JPA的Column注解命名字段会自动生成下划线的问题(命名规则)
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
